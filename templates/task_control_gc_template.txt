(new 'static 'task-control
        :current-stage -1
        :stage (new 'static 'boxed-array :type task-cstage
          (new 'static 'task-cstage
            :game-task (game-task ${task})
            :status (task-status need-hint)
            :flags (task-flags closed-by-default)
            :condition (lambda :behavior process-taskable ((arg0 task-control)) #t)
            )
          (new 'static 'task-cstage
            :game-task (game-task ${task})
            :status (task-status need-introduction)
            :flags (task-flags has-entity)
            :condition (lambda :behavior process-taskable ((arg0 task-control)) #t)
            )
          (new 'static 'task-cstage
            :game-task (game-task ${task})
            :status (task-status need-reminder)
            :flags (task-flags has-entity)
            :condition (lambda :behavior process-taskable ((arg0 task-control)) #t)
            )
          (new 'static 'task-cstage
            :game-task (game-task ${task})
            :status (task-status need-resolution)
            :flags (task-flags has-entity)
            :condition (lambda :behavior process-taskable ((arg0 task-control)) #t)
            )
          )
        )